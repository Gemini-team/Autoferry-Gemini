// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: vesselcontroller/vesselcontroller.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Vesselcontroller {

  /// <summary>Holder for reflection information generated from vesselcontroller/vesselcontroller.proto</summary>
  public static partial class VesselcontrollerReflection {

    #region Descriptor
    /// <summary>File descriptor for vesselcontroller/vesselcontroller.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VesselcontrollerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cid2ZXNzZWxjb250cm9sbGVyL3Zlc3NlbGNvbnRyb2xsZXIucHJvdG8SEHZl",
            "c3NlbGNvbnRyb2xsZXIiIgoOQ29udHJvbFJlcXVlc3QSEAoIdGhyb3R0bGUY",
            "ASABKAIiIgoPQ29udHJvbFJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgy6AQK",
            "EFZlc3NlbENvbnRyb2xsZXISUAoHRm9yd2FyZBIgLnZlc3NlbGNvbnRyb2xs",
            "ZXIuQ29udHJvbFJlcXVlc3QaIS52ZXNzZWxjb250cm9sbGVyLkNvbnRyb2xS",
            "ZXNwb25zZSIAElEKCEJhY2t3YXJkEiAudmVzc2VsY29udHJvbGxlci5Db250",
            "cm9sUmVxdWVzdBohLnZlc3NlbGNvbnRyb2xsZXIuQ29udHJvbFJlc3BvbnNl",
            "IgASUQoIUG9ydHNpZGUSIC52ZXNzZWxjb250cm9sbGVyLkNvbnRyb2xSZXF1",
            "ZXN0GiEudmVzc2VsY29udHJvbGxlci5Db250cm9sUmVzcG9uc2UiABJSCglT",
            "dGFyYm9hcmQSIC52ZXNzZWxjb250cm9sbGVyLkNvbnRyb2xSZXF1ZXN0GiEu",
            "dmVzc2VsY29udHJvbGxlci5Db250cm9sUmVzcG9uc2UiABJNCgRJZGxlEiAu",
            "dmVzc2VsY29udHJvbGxlci5Db250cm9sUmVxdWVzdBohLnZlc3NlbGNvbnRy",
            "b2xsZXIuQ29udHJvbFJlc3BvbnNlIgASWAoPUm90YXRlQ2xvY2t3aXNlEiAu",
            "dmVzc2VsY29udHJvbGxlci5Db250cm9sUmVxdWVzdBohLnZlc3NlbGNvbnRy",
            "b2xsZXIuQ29udHJvbFJlc3BvbnNlIgASXwoWUm90YXRlQ291bnRlckNsb2Nr",
            "d2lzZRIgLnZlc3NlbGNvbnRyb2xsZXIuQ29udHJvbFJlcXVlc3QaIS52ZXNz",
            "ZWxjb250cm9sbGVyLkNvbnRyb2xSZXNwb25zZSIAQj0KIWlvLmdycGMuZXhh",
            "bXBsZXMudmVzc2VsY29udHJvbGxlckIQVmVzc2VsQ29udHJvbGxlclABogID",
            "SExXYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Vesselcontroller.ControlRequest), global::Vesselcontroller.ControlRequest.Parser, new[]{ "Throttle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vesselcontroller.ControlResponse), global::Vesselcontroller.ControlResponse.Parser, new[]{ "Success" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ControlRequest : pb::IMessage<ControlRequest> {
    private static readonly pb::MessageParser<ControlRequest> _parser = new pb::MessageParser<ControlRequest>(() => new ControlRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ControlRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vesselcontroller.VesselcontrollerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlRequest(ControlRequest other) : this() {
      throttle_ = other.throttle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlRequest Clone() {
      return new ControlRequest(this);
    }

    /// <summary>Field number for the "throttle" field.</summary>
    public const int ThrottleFieldNumber = 1;
    private float throttle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Throttle {
      get { return throttle_; }
      set {
        throttle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ControlRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ControlRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Throttle, other.Throttle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Throttle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Throttle);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Throttle != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Throttle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Throttle != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ControlRequest other) {
      if (other == null) {
        return;
      }
      if (other.Throttle != 0F) {
        Throttle = other.Throttle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Throttle = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ControlResponse : pb::IMessage<ControlResponse> {
    private static readonly pb::MessageParser<ControlResponse> _parser = new pb::MessageParser<ControlResponse>(() => new ControlResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ControlResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vesselcontroller.VesselcontrollerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlResponse(ControlResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlResponse Clone() {
      return new ControlResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ControlResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ControlResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ControlResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
