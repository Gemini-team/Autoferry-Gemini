# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from cameradata import cameradata_pb2 as cameradata_dot_cameradata__pb2


class CameradataServiceStub(object):
  """The data service definition
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.TransferImagedata = channel.unary_unary(
        '/cameradata.CameradataService/TransferImagedata',
        request_serializer=cameradata_dot_cameradata__pb2.CameradataRequest.SerializeToString,
        response_deserializer=cameradata_dot_cameradata__pb2.CameradataResponse.FromString,
        )
    self.StreamImagedata = channel.unary_stream(
        '/cameradata.CameradataService/StreamImagedata',
        request_serializer=cameradata_dot_cameradata__pb2.CameradataRequest.SerializeToString,
        response_deserializer=cameradata_dot_cameradata__pb2.CameradataResponse.FromString,
        )


class CameradataServiceServicer(object):
  """The data service definition
  """

  def TransferImagedata(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StreamImagedata(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CameradataServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'TransferImagedata': grpc.unary_unary_rpc_method_handler(
          servicer.TransferImagedata,
          request_deserializer=cameradata_dot_cameradata__pb2.CameradataRequest.FromString,
          response_serializer=cameradata_dot_cameradata__pb2.CameradataResponse.SerializeToString,
      ),
      'StreamImagedata': grpc.unary_stream_rpc_method_handler(
          servicer.StreamImagedata,
          request_deserializer=cameradata_dot_cameradata__pb2.CameradataRequest.FromString,
          response_serializer=cameradata_dot_cameradata__pb2.CameradataResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'cameradata.CameradataService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
