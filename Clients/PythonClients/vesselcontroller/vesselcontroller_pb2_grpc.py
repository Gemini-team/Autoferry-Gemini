# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from vesselcontroller import vesselcontroller_pb2 as vesselcontroller_dot_vesselcontroller__pb2


class VesselControllerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Forward = channel.unary_unary(
        '/vesselcontroller.VesselController/Forward',
        request_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.SerializeToString,
        response_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.FromString,
        )
    self.Backward = channel.unary_unary(
        '/vesselcontroller.VesselController/Backward',
        request_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.SerializeToString,
        response_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.FromString,
        )
    self.Portside = channel.unary_unary(
        '/vesselcontroller.VesselController/Portside',
        request_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.SerializeToString,
        response_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.FromString,
        )
    self.Starboard = channel.unary_unary(
        '/vesselcontroller.VesselController/Starboard',
        request_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.SerializeToString,
        response_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.FromString,
        )
    self.Idle = channel.unary_unary(
        '/vesselcontroller.VesselController/Idle',
        request_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.SerializeToString,
        response_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.FromString,
        )
    self.RotateClockwise = channel.unary_unary(
        '/vesselcontroller.VesselController/RotateClockwise',
        request_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.SerializeToString,
        response_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.FromString,
        )
    self.RotateCounterClockwise = channel.unary_unary(
        '/vesselcontroller.VesselController/RotateCounterClockwise',
        request_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.SerializeToString,
        response_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.FromString,
        )


class VesselControllerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Forward(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Backward(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Portside(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Starboard(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Idle(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RotateClockwise(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RotateCounterClockwise(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VesselControllerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Forward': grpc.unary_unary_rpc_method_handler(
          servicer.Forward,
          request_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.FromString,
          response_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.SerializeToString,
      ),
      'Backward': grpc.unary_unary_rpc_method_handler(
          servicer.Backward,
          request_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.FromString,
          response_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.SerializeToString,
      ),
      'Portside': grpc.unary_unary_rpc_method_handler(
          servicer.Portside,
          request_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.FromString,
          response_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.SerializeToString,
      ),
      'Starboard': grpc.unary_unary_rpc_method_handler(
          servicer.Starboard,
          request_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.FromString,
          response_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.SerializeToString,
      ),
      'Idle': grpc.unary_unary_rpc_method_handler(
          servicer.Idle,
          request_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.FromString,
          response_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.SerializeToString,
      ),
      'RotateClockwise': grpc.unary_unary_rpc_method_handler(
          servicer.RotateClockwise,
          request_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.FromString,
          response_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.SerializeToString,
      ),
      'RotateCounterClockwise': grpc.unary_unary_rpc_method_handler(
          servicer.RotateCounterClockwise,
          request_deserializer=vesselcontroller_dot_vesselcontroller__pb2.ControlRequest.FromString,
          response_serializer=vesselcontroller_dot_vesselcontroller__pb2.ControlResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'vesselcontroller.VesselController', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
